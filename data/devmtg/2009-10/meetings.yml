meetings:
- title: "State of Clang"
  speaker: "Doug Gregor (Apple, Inc.), Chris Lattner (Apple, Inc.), Ted Kremenek (Apple, Inc.)"
  slides_url: "https://llvm.org/devmtg/2009-10/StateOfClang.pdf"
  video_url: "http://devimages.apple.com/llvm/videos/StateOfClang.mov"
  description: ""

- title: "Tutorial: Building backend in 24 hours"
  speaker: "Anton Korobeynikov (Saint Petersburg State University)"
  slides_url: "https://llvm.org/devmtg/2009-10/Korobeynikov_BackendTutorial.pdf"
  video_url: "https://youtu.be/mjjbrBUH1KQ"
  description: "A step by step tutorial to build a backend."

- title: "Precise and efficient garbage collection in VMKit with MMTk"
  speaker: "Nicolas Geoffray (Université Pierre et Marie Curie)"
  slides_url: "https://llvm.org/devmtg/2009-10/Geoffray_GarbageCollectionVMKit.pdf"
  video_url: "https://youtu.be/LcB7V9TcNOQ"
  description: "Describes how precise garbage collection was added to VMKit using the MMTk library. Covers implementation for both JVM and .NET runtimes, including performance improvements and tutorial-like steps for reuse in other LLVM-based VMs."

- title: "Unladen Swallow: Python on LLVM"
  speaker: "Colin Winter (Google)"
  slides_url: "https://llvm.org/devmtg/2009-10/Winter_UnladenSwallowLLVM.pdf"
  video_url: ""
  description: "An overview of Unladen Swallow, a Google-sponsored LLVM-based branch of CPython, discussing architecture, performance benefits, LLVM integration, and challenges."

- title: "Reimplementing llvm-gcc as a gcc plugin"
  speaker: "Duncan Sands (Deep Blue Capital)"
  slides_url: "https://llvm.org/devmtg/2009-10/Sands_LLVMGCCPlugin.pdf"
  video_url: ""
  description: "Explores replacing GCC optimizers with LLVM via the GCC plugin mechanism, aiming to replicate llvm-gcc functionality without altering GCC directly."

- title: "ScalarEvolution and Loop Optimization"
  speaker: "Dan Gohman (Apple, Inc.)"
  slides_url: "https://llvm.org/devmtg/2009-10/ScalarEvolutionAndLoopOptimization.pdf"
  video_url: "http://devimages.apple.com/llvm/videos/ScalarEvolutionLoopOptimizationLLVM.mov"
  description: "Overview of LLVM's ScalarEvolution framework, its major changes, new capabilities, and supporting infrastructure."

- title: "Object Code Emission and llvm-mc"
  speaker: "Bruno Cardoso Lopes (University of Campinas)"
  slides_url: "https://llvm.org/devmtg/2009-10/Lopes_ObjectCodeEmission.pdf"
  video_url: "https://youtu.be/VPyZBi39Ymw"
  description: "High-level look at LLVM’s Machine Code Emitter focusing on object file generation, design structure, and current implementation status."

- title: "LLVM on 180k Cores"
  speaker: "David Greene (Cray)"
  slides_url: "https://llvm.org/devmtg/2009-10/Greene_180k_Cores.pdf"
  video_url: "https://youtu.be/_v9uEJx6E30"
  description: "Details Cray's integration of LLVM into a production compiler, covering encountered challenges, benefits, and contributions to upstream LLVM."

- title: "The Parfait Bug-Checker"
  speaker: "Cristina Cifuentes (Sun Microsystems)"
  slides_url: "https://llvm.org/devmtg/2009-10/Cifuentes_ParfaitBugChecker.pdf"
  video_url: "https://youtu.be/a9v_KR4bdiU"
  description: "Parfait is a bug-checking research tool for C built on LLVM, used internally at Sun and externally in the open-source OS community. Discusses design, internals, and demo results."

- title: "Optimizing ActionScript Bytecode using LLVM"
  speaker: "Scott Petersen (Adobe Systems, Inc.)"
  slides_url: "https://llvm.org/devmtg/2009-10/Petersen_OptimizingActionScriptBytecode.pdf"
  video_url: https://youtu.be/KUQ6yZyzA2o""
  description: "Discusses Adobe’s LLVM-based optimizer for ActionScript Bytecode, its current state, and potential for general bytecode optimization using LLVM infrastructure."

- title: "Targeting XCore resources from LLVM"
  speaker: "Richard Osborne (XMOS)"
  slides_url: "https://llvm.org/devmtg/2009-10/Osborne_TargetingXCoreResources.pdf"
  video_url: "https://youtu.be/DF-2gA_0QfU"
  description: "Shows how LLVM is used to compile a C dialect extended for the XCore’s hardware-threaded architecture with channel-based communication and I/O timing."

- title: "Future Works in LLVM Register Allocation"
  speaker: "Lang Hames (Apple, Inc.)"
  slides_url: "https://llvm.org/devmtg/2009-10/RegisterAllocationFutureWorks.pdf"
  video_url: "http://devimages.apple.com/llvm/videos/FutureLLVMRegister.mov"
  description: "Talk on planned and ongoing improvements in LLVM's register allocation framework."

- title: "CoVaC: Compiler Validation by Program Analysis of the Cross-Product"
  speaker: "Anna Zaks (New York University)"
  slides_url: "https://llvm.org/devmtg/2009-10/Zaks_CoVaC.pdf"
  video_url: "https://youtu.be/iXTliWhYpRs"
  description: "CoVaC is a framework built on LLVM 2.0 that formally verifies compiler optimizations by checking semantic equivalence using a cross-product of program states."

- title: "OpenCL"
  speaker: "Nate Begeman (Apple, Inc.)"
  slides_url: "https://llvm.org/devmtg/2009-10/OpenCLWithLLVM.pdf"
  video_url: "http://devimages.apple.com/llvm/videos/OpenCLandLLVM.mov"
  description: ""

- title: "SoftBound: Highly Compatible and Complete Spatial Memory Safety for C"
  speaker: "Santosh Nagarakatte (University of Pennsylvania)"
  slides_url: "https://llvm.org/devmtg/2009-10/Nagarakatte_SoftBound.pdf"
  video_url: "https://youtu.be/0nNGS8D5xDg"
  description: "SoftBound enforces spatial memory safety for C at compile-time by attaching base and bound metadata to every pointer, with no source code changes required."

- title: "PLANG: Translating NVIDIA PTX language to LLVM IR Machine"
  speaker: "Vinod Grover (NVIDIA)"
  slides_url: "https://llvm.org/devmtg/2009-10/Grover_PLANG.pdf"
  video_url: "https://youtu.be/o-T8Dn8WX9E"
  description: "PLANG is a frontend for PTX that emits LLVM IR, allowing reuse of LLVM for PTX analysis, optimization, and code generation targeting CPUs."

- title: "Accelerating Ruby with LLVM"
  speaker: "Evan Phoenix (Engine Yard)"
  slides_url: "https://llvm.org/devmtg/2009-10/Phoenix_AcceleratingRuby.pdf"
  video_url: "https://youtu.be/J8Q1ljBMFjA"
  description: "Rubinius is a Ruby VM with JIT compilation using LLVM. This talk explains architecture, background compilation, profiling, and efficient IR generation strategies."
